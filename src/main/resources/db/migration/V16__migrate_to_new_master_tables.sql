-- Migration script to create new master tables and migrate data from old tables
-- V16__migrate_to_new_master_tables.sql

-- Create QRMFG_LOCATION_MASTER table
CREATE TABLE QRMFG_LOCATION_MASTER (
    LOCATION_CODE VARCHAR2(50) PRIMARY KEY,
    DESCRIPTION VARCHAR2(200)
);

-- Create QRMFG_PROJECT_ITEM_MASTER table
CREATE TABLE QRMFG_PROJECT_ITEM_MASTER (
    PROJECT_CODE VARCHAR2(50) NOT NULL,
    ITEM_CODE VARCHAR2(50) NOT NULL,
    PRIMARY KEY (PROJECT_CODE, ITEM_CODE)
);

-- Create QRMFG_BLOCK_MASTER table
CREATE TABLE QRMFG_BLOCK_MASTER (
    BLOCK_ID VARCHAR2(50) PRIMARY KEY,
    DESCRIPTION VARCHAR2(200)
);

-- Migrate data from FSLOCATION to QRMFG_LOCATION_MASTER (if FSLOCATION exists)
BEGIN
    EXECUTE IMMEDIATE '
        INSERT INTO QRMFG_LOCATION_MASTER (LOCATION_CODE, DESCRIPTION)
        SELECT DISTINCT LOCATION_CODE, 
               COALESCE(LOCATION_NAME, LOCATION_CODE) as DESCRIPTION
        FROM FSLOCATION 
        WHERE LOCATION_CODE IS NOT NULL
    ';
    DBMS_OUTPUT.PUT_LINE('Migrated data from FSLOCATION to QRMFG_LOCATION_MASTER');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('FSLOCATION table does not exist or migration failed: ' || SQLERRM);
END;
/

-- Migrate data from FSOBJECTREFERENCE to QRMFG_PROJECT_ITEM_MASTER (if FSOBJECTREFERENCE exists)
BEGIN
    EXECUTE IMMEDIATE '
        INSERT INTO QRMFG_PROJECT_ITEM_MASTER (PROJECT_CODE, ITEM_CODE)
        SELECT DISTINCT OBJECT_KEY as PROJECT_CODE, 
               R_OBJECT_KEY as ITEM_CODE
        FROM FSOBJECTREFERENCE 
        WHERE OBJECT_TYPE = ''PROJECT'' 
          AND R_OBJECT_TYPE = ''ITEM'' 
          AND REF_CODE = ''SER_PRD_ITEM''
          AND OBJECT_KEY IS NOT NULL 
          AND R_OBJECT_KEY IS NOT NULL
    ';
    DBMS_OUTPUT.PUT_LINE('Migrated data from FSOBJECTREFERENCE to QRMFG_PROJECT_ITEM_MASTER');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('FSOBJECTREFERENCE table does not exist or migration failed: ' || SQLERRM);
END;
/

-- Create sample block data (since blocks were derived from location codes in old system)
BEGIN
    -- Extract block data from location codes that contain dashes (block pattern)
    EXECUTE IMMEDIATE '
        INSERT INTO QRMFG_BLOCK_MASTER (BLOCK_ID, DESCRIPTION)
        SELECT DISTINCT LOCATION_CODE as BLOCK_ID,
               COALESCE(LOCATION_NAME, LOCATION_CODE) as DESCRIPTION
        FROM FSLOCATION 
        WHERE LOCATION_CODE LIKE ''%-%''
          AND LOCATION_CODE IS NOT NULL
    ';
    DBMS_OUTPUT.PUT_LINE('Migrated block data from FSLOCATION to QRMFG_BLOCK_MASTER');
EXCEPTION
    WHEN OTHERS THEN
        -- If no data to migrate, create some sample blocks
        INSERT INTO QRMFG_BLOCK_MASTER (BLOCK_ID, DESCRIPTION) VALUES ('BLOCK-001', 'Block 001');
        INSERT INTO QRMFG_BLOCK_MASTER (BLOCK_ID, DESCRIPTION) VALUES ('BLOCK-002', 'Block 002');
        INSERT INTO QRMFG_BLOCK_MASTER (BLOCK_ID, DESCRIPTION) VALUES ('BLOCK-003', 'Block 003');
        DBMS_OUTPUT.PUT_LINE('Created sample block data in QRMFG_BLOCK_MASTER');
END;
/

-- Create indexes for performance
CREATE INDEX idx_qrmfg_project_item_project_code ON QRMFG_PROJECT_ITEM_MASTER(PROJECT_CODE);
CREATE INDEX idx_qrmfg_project_item_item_code ON QRMFG_PROJECT_ITEM_MASTER(ITEM_CODE);
CREATE INDEX idx_qrmfg_location_location_code ON QRMFG_LOCATION_MASTER(LOCATION_CODE);
CREATE INDEX idx_qrmfg_block_block_id ON QRMFG_BLOCK_MASTER(BLOCK_ID);

-- Add some sample data if tables are empty
DECLARE
    location_count NUMBER;
    project_item_count NUMBER;
    block_count NUMBER;
BEGIN
    -- Check and add sample location data
    SELECT COUNT(*) INTO location_count FROM QRMFG_LOCATION_MASTER;
    IF location_count = 0 THEN
        INSERT INTO QRMFG_LOCATION_MASTER (LOCATION_CODE, DESCRIPTION) VALUES ('1001', 'Plant 1001');
        INSERT INTO QRMFG_LOCATION_MASTER (LOCATION_CODE, DESCRIPTION) VALUES ('1002', 'Plant 1002');
        INSERT INTO QRMFG_LOCATION_MASTER (LOCATION_CODE, DESCRIPTION) VALUES ('1003', 'Plant 1003');
        DBMS_OUTPUT.PUT_LINE('Added sample location data');
    END IF;
    
    -- Check and add sample project-item data
    SELECT COUNT(*) INTO project_item_count FROM QRMFG_PROJECT_ITEM_MASTER;
    IF project_item_count = 0 THEN
        INSERT INTO QRMFG_PROJECT_ITEM_MASTER (PROJECT_CODE, ITEM_CODE) VALUES ('SER-A-000210', 'R31516J');
        INSERT INTO QRMFG_PROJECT_ITEM_MASTER (PROJECT_CODE, ITEM_CODE) VALUES ('SER-A-000210', 'R31517K');
        INSERT INTO QRMFG_PROJECT_ITEM_MASTER (PROJECT_CODE, ITEM_CODE) VALUES ('SER-B-000211', 'R31518L');
        INSERT INTO QRMFG_PROJECT_ITEM_MASTER (PROJECT_CODE, ITEM_CODE) VALUES ('SER-B-000211', 'R31519M');
        INSERT INTO QRMFG_PROJECT_ITEM_MASTER (PROJECT_CODE, ITEM_CODE) VALUES ('SER-C-000212', 'R31520N');
        DBMS_OUTPUT.PUT_LINE('Added sample project-item data');
    END IF;
    
    -- Check block data
    SELECT COUNT(*) INTO block_count FROM QRMFG_BLOCK_MASTER;
    IF block_count = 0 THEN
        INSERT INTO QRMFG_BLOCK_MASTER (BLOCK_ID, DESCRIPTION) VALUES ('BLOCK-001', 'Block 001');
        INSERT INTO QRMFG_BLOCK_MASTER (BLOCK_ID, DESCRIPTION) VALUES ('BLOCK-002', 'Block 002');
        INSERT INTO QRMFG_BLOCK_MASTER (BLOCK_ID, DESCRIPTION) VALUES ('BLOCK-003', 'Block 003');
        DBMS_OUTPUT.PUT_LINE('Added sample block data');
    END IF;
    
    COMMIT;
END;
/

COMMIT;